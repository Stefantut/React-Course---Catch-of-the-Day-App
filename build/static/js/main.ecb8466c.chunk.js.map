{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Order.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","fish","name","price","parseFloat","status","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","onClick","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","appId","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","console","log","signOut","onAuthStateChanged","Object","keys","fishes","map","key","loadSampleFishes","Order","renderOrder","count","order","isAvailable","transitionOptions","classNames","timeout","enter","exit","component","removeFromOrder","orderIds","total","reduce","prevTotal","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","removeBinding","setItem","stringify","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.ecb8466c.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getFunName } from \"../helpers\";\r\nclass StorePicker extends React.Component {\r\n  static propTypes = {\r\n    history: PropTypes.object,\r\n  };\r\n  myInput = React.createRef();\r\n\r\n  goToStore = (event) => {\r\n    // stop the form from submitting\r\n    event.preventDefault();\r\n    // get the text from that input\r\n    const storeName = this.myInput.current.value;\r\n    // change the page to /store/what-was-entered\r\n    this.props.history.push(`/store/${storeName}`);\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n        <h2>Please Enter a Store</h2>\r\n        <input\r\n          type=\"text\"\r\n          ref={this.myInput}\r\n          required\r\n          placeholder=\"Store Name\"\r\n          defaultValue={getFunName()}\r\n        />\r\n        <button type=\"submit\">Visit Store →</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePicker;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Stateless Functional component\r\nconst Header = (props) => (\r\n  <header className=\"top\">\r\n    <h1>\r\n      Catch\r\n      <span className=\"ofThe\">\r\n        <span className=\"of\">Of</span>\r\n        <span className=\"the\">The</span>\r\n      </span>\r\n      Day\r\n    </h1>\r\n    <h3 className=\"tagline\">\r\n      <span>{props.tagline}</span>\r\n    </h3>\r\n  </header>\r\n);\r\n\r\n// add proptypes after the component because is stateless\r\nHeader.propTypes = {\r\n  tagline: PropTypes.string.isRequired,\r\n};\r\n\r\n// Full React Component\r\n// class Header extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <header className=\"top\">\r\n//         <h1>\r\n//           Catch\r\n//           <span className=\"ofThe\">\r\n//             <span className=\"of\">Of</span>\r\n//             <span className=\"the\">The</span>\r\n//           </span>\r\n//           Day\r\n//         </h1>\r\n//         <h3 className=\"tagline\">\r\n//           <span>{this.props.tagline}</span>\r\n//         </h3>\r\n//       </header>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nclass AddFishForm extends React.Component {\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    addFish: PropTypes.func,\r\n  };\r\n\r\n  createFish = (event) => {\r\n    // stop the form from submitting\r\n    event.preventDefault();\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value), // To store it as a number\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value,\r\n    };\r\n    this.props.addFish(fish);\r\n    // refresh the form\r\n    event.currentTarget.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n        <input\r\n          name=\"price\"\r\n          ref={this.priceRef}\r\n          type=\"text\"\r\n          placeholder=\"Price\"\r\n        />\r\n        <select name=\"status\" ref={this.statusRef}>\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out</option>\r\n        </select>\r\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\r\n        <input\r\n          name=\"image\"\r\n          ref={this.imageRef}\r\n          type=\"text\"\r\n          placeholder=\"Image\"\r\n        />\r\n        <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFishForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nclass EditFishForm extends React.Component {\r\n  static propTypes = {\r\n    fish: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number,\r\n    }),\r\n    index: PropTypes.string,\r\n    updateFish: PropTypes.func,\r\n  };\r\n  handleChange = (event) => {\r\n    // update that fish\r\n    // 1. take a copy of the current fish\r\n    const updatedFish = {\r\n      ...this.props.fish,\r\n      // using computed property names\r\n      [event.currentTarget.name]: event.currentTarget.value,\r\n    };\r\n    this.props.updateFish(this.props.index, updatedFish);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.props.fish.name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"price\"\r\n          value={this.props.fish.price}\r\n          onChange={this.handleChange}\r\n        />\r\n        <select\r\n          type=\"text\"\r\n          name=\"status\"\r\n          value={this.props.fish.status}\r\n          onChange={this.handleChange}\r\n        >\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out</option>\r\n        </select>\r\n        <textarea\r\n          name=\"desc\"\r\n          value={this.props.fish.desc}\r\n          onChange={this.handleChange}\r\n        >\r\n          {\" \"}\r\n        </textarea>\r\n        <input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          value={this.props.fish.image}\r\n          onChange={this.handleChange}\r\n        />\r\n        {/* deletes that fish */}\r\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\r\n          Remove Fish\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFishForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Login = (props) => (\r\n  <nav className=\"login\">\r\n    <h2>Inventory Login</h2>\r\n    <p>Sign in to manage your store's inventory</p>\r\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\r\n      Log In with Github\r\n    </button>\r\n  </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired,\r\n};\r\nexport default Login;\r\n","import Rebase from \"re-base\";\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyAKc4ZU5l7j4SgQy2FvfXB7-o6-Pl_dYEs\",\r\n  authDomain: \"catch-of-the-day-1643d.firebaseapp.com\",\r\n  databaseURL: \"https://catch-of-the-day-1643d.firebaseio.com\",\r\n  appId: \"1:20629686959:web:7e07f330b678585fe0a25a\",\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n// this is a named export\r\nexport { firebaseApp };\r\n\r\n// this is a default export\r\nexport default base;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase\";\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\nimport base, { firebaseApp } from \"../base\";\r\nclass Inventory extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updataFish: PropTypes.func,\r\n    addFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    uid: null,\r\n    owner: null,\r\n  };\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.authHandler({ user });\r\n      }\r\n    });\r\n  }\r\n  authHandler = async (authData) => {\r\n    // 1. look up the current store in the firebase database\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    // 2.claim it if there is no owner\r\n    if (!store.owner) {\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid,\r\n      });\r\n    }\r\n    // 3. set the state of the inventory component to reflect the current user\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid,\r\n    });\r\n  };\r\n\r\n  authenticate = (provider) => {\r\n    //created dynamic provider\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    // after the login it will call authHandler func\r\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n  };\r\n\r\n  //Log out method\r\n  logout = async () => {\r\n    console.log(\"logging out\");\r\n    await firebase.auth().signOut();\r\n    this.setState({ uid: null });\r\n  };\r\n\r\n  render() {\r\n    const logout = <button onClick={this.logout}>Log Out!</button>;\r\n    //1. check if somebody is logged in\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n    //2. check if the owner of the store is not looged in\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry , you are not th owner</p>\r\n          {logout}\r\n        </div>\r\n      );\r\n    }\r\n    // 3. If is the owner, render the inventory\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map((key) => (\r\n          <EditFishForm\r\n            key={key}\r\n            index={key}\r\n            fish={this.props.fishes[key]}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n\r\n        <button onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    order: PropTypes.object,\r\n    removeFromOrder: PropTypes.func,\r\n  };\r\n  renderOrder = (key) => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = fish && fish.status === \"available\";\r\n    // create a variable with all transition props if\r\n    // you will reuse the transition - convert to an object\r\n    const transitionOptions = {\r\n      classNames: \"order\",\r\n      key: key,\r\n      timeout: { enter: 500, exit: 500 },\r\n    }; // now you can spread this options into that object\r\n\r\n    // make sure the fish is loaded before we continue\r\n    if (!fish) return null;\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            Sorry {fish ? fish.name : \"fish\"} is no longer available.\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n    return (\r\n      <CSSTransition {...transitionOptions}>\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition\r\n                classNames=\"count\"\r\n                key={count}\r\n                timeout={{ enter: 500, exit: 500 }}\r\n              >\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            lbs {fish.name}\r\n            {formatPrice(count * fish.price)}\r\n            <button onClick={() => this.props.removeFromOrder(key)}>\r\n              &times;\r\n            </button>\r\n          </span>\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === \"available\";\r\n\r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        <div className=\"total\">\r\n          Total:\r\n          <strong>{formatPrice(total)}</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\n\r\nclass Fish extends React.Component {\r\n  // add proptypes inside the because is a regular React component\r\n  // added static because we are declaring the propTypes for all fishes\r\n  static propTypes = {\r\n    details: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number,\r\n    }),\r\n    addToOrder: PropTypes.func,\r\n  };\r\n  render() {\r\n    // using es6 destructuring\r\n    const { image, name, price, desc, status } = this.props.details;\r\n    const isAvailable = status === \"available\";\r\n    return (\r\n      <li className=\"menu-fish\">\r\n        <img src={image} alt={name} />\r\n        <h3 className=\"fish-name\">\r\n          {name}\r\n          <span className=\"price\">{formatPrice(price)}</span>\r\n        </h3>\r\n        <p>{desc}</p>\r\n        <button\r\n          disabled={!isAvailable}\r\n          onClick={() => this.props.addToOrder(this.props.index)}\r\n        >\r\n          {isAvailable ? \"Add To Cart\" : \"Sold Out\"}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fish;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Inventory from \"./Inventory\";\r\nimport Order from \"./Order\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport Fish from \"./Fish\";\r\nimport base from \"../base\";\r\nimport PropTypes from \"prop-types\";\r\nclass App extends React.Component {\r\n  // use a property to create state\r\n  state = {\r\n    fishes: {},\r\n    order: {},\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.object,\r\n  };\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    // first reinstate our localStorage\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n    if (localStorageRef) {\r\n      this.setState({ order: JSON.parse(localStorageRef) });\r\n    }\r\n    //sync with firebase\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: \"fishes\",\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // save order to local storage\r\n    const { params } = this.props.match;\r\n    localStorage.setItem(params.storeId, JSON.stringify(this.state.order));\r\n  }\r\n\r\n  addFish = (fish) => {\r\n    // to update the state use the existing setState Api\r\n    // 1. take a copy of the existing state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Add our new fish to fishes variable\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    // 3. Set the new fishes object\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  updateFish = (key, updatedFish) => {\r\n    // 1. take a copy of the current state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. update that state\r\n    fishes[key] = updatedFish;\r\n    // 3. set the new data to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  deleteFish = (key) => {\r\n    // 1. take a copy of state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. set the fish we don't want to null - firebase, otherwise use delete\r\n    fishes[key] = null;\r\n    // 3. update state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({ fishes: sampleFishes });\r\n  };\r\n\r\n  addToOrder = (key) => {\r\n    // 1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Either add to the order, or update the number in our order\r\n    order[key] = order[key] + 1 || 1;\r\n    // 3. call setstate to update our state object\r\n    this.setState({ order });\r\n  };\r\n\r\n  removeFromOrder = (key) => {\r\n    // 1. take a copy of the state\r\n    const order = { ...this.state.order };\r\n    // 2. delete the fish from order\r\n    delete order[key];\r\n    // 3. set state again\r\n    this.setState({ order });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map((key) => (\r\n              // if you need access to the key, you have\r\n              //  to pass it second time with a prop other than key - in our case index\r\n              <Fish\r\n                key={key}\r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        {/* Use object spread to get everything which is inside state */}\r\n        {/* <Order {...this.state} /> */}\r\n\r\n        {/* To get exactly what we need from state  */}\r\n        <Order\r\n          fishes={this.state.fishes}\r\n          order={this.state.order}\r\n          removeFromOrder={this.removeFromOrder}\r\n        />\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          updateFish={this.updateFish}\r\n          deleteFish={this.deleteFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          fishes={this.state.fishes}\r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <h2>Not Found!!</h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport StorePicker from \"./StorePicker\";\r\nimport App from \"./App\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={StorePicker} />\r\n      <Route path=\"/store/:storeId\" component={App} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\n// import App from \"./components/App\";\r\nimport Router from \"./components/Router\";\r\nimport \"./css/style.css\";\r\n\r\nrender(<Router />, document.querySelector(\"#main\"));\r\n"],"sourceRoot":""}